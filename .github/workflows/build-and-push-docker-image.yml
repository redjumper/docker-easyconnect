name: Build And Push Docker Image

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

env:
  IMAGE_NAME: hagb/docker-easyconnect

jobs:
  check:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Compare pkg_version.xml
        id: compare
        run: |
          wget http://download.sangfor.com.cn/download/product/sslvpn/pkg/pkg_version.xml -O pkg_version_remote.xml
          if diff pkg_version.xml pkg_version_remote.xml >/dev/null; then
            echo "different=false" >> $GITHUB_OUTPUT
          else
            echo "different=true" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Replace pkg_version.xml
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          cp pkg_version_remote.xml pkg_version.xml
          git add pkg_version.xml
          git commit -m "Update pkg_version.xml"
          git push
          echo "::set-output name=status::updated"
        if: steps.compare.outputs.different == 'true'

  build:

    needs: [check]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || needs.check.outputs.status == 'updated' || needs.check.outputs.different == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker-build() {
            docker pull $1
            docker build -t $1 --cache-from $1 --build-arg BUILD_ENV=actions "${@:2}"
          }

          docker-build ${{ env.IMAGE_NAME }}:cli -f Dockerfile.cli .

          docker-build ${{ env.IMAGE_NAME }}:7.6.3 --build-arg EC_URL=$(cat ec_urls/7.6.3.txt) -f Dockerfile .
          docker-build ${{ env.IMAGE_NAME }}:7.6.7 --build-arg EC_URL=$(cat ec_urls/7.6.7.txt) -f Dockerfile .

          docker-build ${{ env.IMAGE_NAME }}:vncless-7.6.3 --build-arg EC_URL=$(cat ec_urls/7.6.3.txt) -f Dockerfile.vncless .
          docker-build ${{ env.IMAGE_NAME }}:vncless-7.6.7 --build-arg EC_URL=$(cat ec_urls/7.6.7.txt) -f Dockerfile.vncless .

      - name: Push Docker image
        run: |
          docker tag ${{ env.IMAGE_NAME }}:7.6.3 ${{ env.IMAGE_NAME }}:latest
          docker push --all-tags ${{ env.IMAGE_NAME }}
